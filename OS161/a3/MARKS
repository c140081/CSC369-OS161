|---------------------------------------------------------------------------|
| TOTAL(Out of 50)                                                   |  50  |
|---------------------------------------------------------------------------|

|---------------------------------------------------------------------------|
| Filetable design/setup/cleanup:                                    |  11  |
|--------------------------------------------------------------------+------|
| filetable initializated during runprogram                          |   2  |
|--------------------------------------------------------------------+------|
| proper cleanup on file close and filetable_destroy                 |   2  |
|--------------------------------------------------------------------+------|
| supports proper sharing of open files for dup2 and fork            |   4  |
|--------------------------------------------------------------------+------|
| includes some form of "filetable_copy" for fork                    |   3  |
|--------------------------------------------------------------------+------|
| Comments:                                                                 |
|   - filetable has no support for locking                                  |
|   - filetable_init: you don't free the memory you reserved for each file  |
|     when exiting due to failure.                                          |
|   - file_close doesn't return correct error values                        |
|   - filetable_destroy: You mean `if (fte != NULL)` ...                    |
|---------------------------------------------------------------------------|


|---------------------------------------------------------------------------|
| System Calls:                                                      |  29  |
|--------------------------------------------------------------------+------|
| badcall tests all pass with the proper error code                  |  10  |
|--------------------------------------------------------------------+------|
| proper cleanup before either normal or error return                |   9  |
|--------------------------------------------------------------------+------|
| correct behavior when used correctly (psh tests)                   |  10  |
|--------------------------------------------------------------------+------|
| Comments:                                                                 |
|   - `chdir` doesn't free memory.                                          |
|---------------------------------------------------------------------------|

|---------------------------------------------------------------------------|
| SFS Getdirectory(optional):                                        |   5  |
|--------------------------------------------------------------------+------|
| Correct implementation of sfs_getdirentry()                        |   4  |
|--------------------------------------------------------------------+------|
| Correct modification of sfs_dirops to call sfs_getdirentry         |   1  |
|---------------------------------------------------------------------------|

|---------------------------------------------------------------------------|
| SFS inode data inlining(optional)                                  |   -  |
|--------------------------------------------------------------------+------|
| Correct recalculation of file block for reading/writing            |   -  |
|--------------------------------------------------------------------+------|
| Marks inode dirty when data part is modified (does not             |      |
|      write inode back immediately when data part is modified)      |   -  |
|--------------------------------------------------------------------+------|
| Correct changes to truncate file                                   |   -  |
|---------------------------------------------------------------------------|

|---------------------------------------------------------------------------|
| Design Document:                                                   |   5  |
|---------------------------------------------------------------------------|
